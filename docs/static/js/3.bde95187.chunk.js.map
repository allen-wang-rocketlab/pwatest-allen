{"version":3,"sources":["components/Video/Video.skeleton.js","components/Video/Video.js"],"names":["VideoSkeleton","error","className","Video","useState","videoInit","setVideoInit","videoError","setVideoError","barcode","setBarcode","cameraFacingUser","setCameraFacingUser","onDetected","result","Quagga","offDetected","codeResult","code","useEffect","navigator","mediaDevices","getUserMedia","init","inputStream","name","type","target","document","querySelector","constraints","width","height","facingMode","numOfWorkers","locate","decoder","readers","err","start","id","onClick","pause","console","log"],"mappings":"sJAYeA,EAVO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpB,yBAAKC,UAAU,mBACZD,EACC,GAEA,6CCyESE,UA3ED,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACXC,EADW,KACAC,EADA,OAEkBF,oBAAS,GAF3B,mBAEXG,EAFW,KAECC,EAFD,OAGYJ,mBAAS,MAHrB,mBAGXK,EAHW,KAGFC,EAHE,OAI8BN,oBAAS,GAJvC,mBAIXO,EAJW,KAIOC,EAJP,KAWZC,EAAa,SAAbA,EAAcC,GAClBC,IAAOC,YAAYH,GACnBH,EAAWI,EAAOG,WAAWC,OAyC/B,OA7BAC,qBAAU,WACJC,UAAUC,cAAgBD,UAAUC,aAAaC,eACnDP,IAAOQ,KAAK,CACVC,YAAa,CACXC,KAAM,OACNC,KAAM,aACNC,OAAQC,SAASC,cAAc,UAC/BC,YAAa,CACXC,MAAO,IACPC,OAAQ,IACRC,WAAYtB,EAAmB,OAAS,gBAG5CuB,aAAc,EACdC,QAAQ,EACRC,QAAS,CACPC,QAAS,CAAC,aAAc,eAAgB,aAAc,sBAEvD,SAACC,GACEA,EACF9B,GAAc,IAtCpBO,IAAOwB,QACPjC,GAAa,OA0CXS,IAAOF,WAAWA,MAEnB,IAEI,6BACL,6BACE,8CAEF,6BACGN,EACC,6BACE,2HAGF,6BACE,yBAAKiC,GAAG,UACPnC,EAAY,GAAK,kBAAC,EAAD,OAGtB,4BAAQqB,KAAK,SAASe,QAAS,kBAnDjC1B,IAAO2B,QACP9B,GAAqBD,GACrBI,IAAOwB,QACPjC,GAAa,QACbqC,QAAQC,IAAIjC,KA+CV,WAEDF","file":"static/js/3.bde95187.chunk.js","sourcesContent":["import React from 'react';\n\nconst VideoSkeleton = ({ error }) => (\n  <div className=\"skeleton__video\">\n    {error ?\n      \"\"\n      :\n      <div>Loading...</div>\n    }\n  </div>\n);\n\nexport default VideoSkeleton;\n","import React, { useState, useEffect } from 'react';\nimport Quagga from 'quagga';\n\nimport VideoSkeleton from './Video.skeleton';\n\nconst Video = () => {\n  const [videoInit, setVideoInit] = useState(false);\n  const [videoError, setVideoError] = useState(false);\n  const [barcode, setBarcode] = useState(null);\n  const [cameraFacingUser, setCameraFacingUser] = useState(true);\n\n  const onInitSuccess = () => {\n    Quagga.start();\n    setVideoInit(true);\n  }\n\n  const onDetected = (result) => {\n    Quagga.offDetected(onDetected);\n    setBarcode(result.codeResult.code);\n    // do the API stuff\n  }\n\n  const switchCameraHandler = () => {\n    Quagga.pause();\n    setCameraFacingUser(!cameraFacingUser);\n    Quagga.start();\n    setVideoInit(true);\n    console.log(cameraFacingUser)\n  }\n\n  useEffect(() => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      Quagga.init({\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: document.querySelector('#video'),\n          constraints: {\n            width: 900,\n            height: 300,\n            facingMode: cameraFacingUser ? \"user\" : \"environment\"\n          }\n        },\n        numOfWorkers: 1,\n        locate: true,\n        decoder: {\n          readers: ['ean_reader', 'ean_8_reader', 'upc_reader', 'code_128_reader']\n        }\n      }, (err) => {\n        if (err) {\n          setVideoError(true);\n          return;\n        }\n        onInitSuccess();\n      });\n      Quagga.onDetected(onDetected);\n    }\n  }, []);\n\n  return <div>\n    <div>\n      <p>Scan a product</p>\n    </div>\n    <div>\n      {videoError ?\n        <div>\n          <p>Your device does not support camera access. Please enter the barcode in the space provided.</p>\n        </div>\n        :\n        <div>\n          <div id=\"video\" />\n          {videoInit ? '' : <VideoSkeleton />}\n        </div>\n      }\n      <button type=\"button\" onClick={() => switchCameraHandler()}>Switch</button>\n    </div>\n    {barcode}\n  </div>\n}\n\nexport default Video;\n"],"sourceRoot":""}